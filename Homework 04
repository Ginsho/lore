# TASK 01 _________________________________________
def sal():
    try:
        time = float(input('Work hours >>> '))
        rate = int(input('Rate in RUR >>> '))
        benefit = int(input('Benefit in RUR >>> '))
        salary = (time * rate) + benefit
        print(f'Yours salary is  {salary} RUR')
    except ValueError:
        return print('Not a number')


sal()

# TASK 02 _________________________________________
num_list = [18, 7, 13, 7, 5, 4, 10, 22, 9, 12, 34, 1, 1, 4, 5, 1, 8, 21, 13, 11, 6, 15]
new_list = [el for el in num_list if el > num_list[num_list.index(el)-1]]
print(new_list)

# TASK 03 _________________________________________
num_list = [el for el in range(20, 241) if el % 20 == 0 or el % 21 == 0]
print(f'Numbers from 20 to 240 which multiples are 20 or 21: {num_list}')

# TASK 04 _________________________________________
num_list = [39, 18, 7, 13, 7, 5, 4, 10, 22, 9, 12, 34, 1, 1, 4, 5, 1, 8, 21, 13, 11, 6, 15]
new_list = [el for el in num_list if num_list.count(el) < 2]
print(new_list)

# TASK 05 _________________________________________
from functools import reduce


def my_func(el_prev, el):
    return el_prev * el


num_list = [el for el in range(100, 1001) if el % 2 == 0]
mult = [reduce(my_func, [el for el in range(99, 1001) if el % 2 == 0])]
print(f'List of even values: {num_list}')
print(f'The result of multiplying all the elements of the list: {mult}')

# TASK 06.1 _________________________________________
from itertools import count


def generator(start_number, stop_number):
    for el in count(start_number):
        if el > stop_number:
            break
        else:
            print(el)


generator(start_number=int(input("Enter the one number to start from >>> ")),
          stop_number=int(input("Enter the one number to stop at >>> ")))

# TASK 06.2 _________________________________________
from itertools import cycle


def inf_cycle(num_list, repeat):
    i = 0
    times = cycle(num_list)
    while i < repeat:
        print(next(times))
        i += 1


inf_cycle(num_list=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], repeat=int(input("enter iteration: ")))

# TASK 07 _________________________________________
from itertools import count
from math import factorial


def fibo_gen():
    for el in count(1):
        yield factorial(el)


gen = fibo_gen()
x = 0
for i in gen:
    if x < 15:
        print(i)
        x += 1
    else:
        break
